"""Пример использования модуля random."""

import random

# Почти все функции модуля зависят от базовой функции random(),
# которая генерирует случайный float на отрезке [0.0, 1.0)
print(random.random())
# Случайный элемент последовательности
print(random.choice('wxyz'))
# Подпоследовательность из трёх элементов последовательности
print(random.sample('abcde', 3))
# Значение больше чем первый аргумент и не строго меньше чем второй
print(random.randint(100, 103))
# Случайное число из промежутка от 0 до 10
print(random.randrange(10))
# Случайное число из промежутка от 0 до 101 с шагом 7
print(random.randrange(0, 101, 7))

print()


# Функции данного модуля на самом деле являются методами скрытого экземляра
# класса random.Random.  Можно создавать свои экземляры, чтобы создавать
# генераторы случайных чисел без общего состояния.  Стандартный random.Random
# работает на основе генератора псевдослучайных чисел Вихрь Мерсенна.  Можно
# создавать свои подклассы, реализующие другие генераторы.

class MyRandom(random.Random): 
    def __init__(self, seed=4121):
        super().__init__()
        self.value = seed

    def random(self):
        self.value = (self.value + 4) % 10000
        return self.value / 10000

obj = MyRandom()
print(obj.random())
print(obj.choice(['1', '3', '66', '4444'])) 
